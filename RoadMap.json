{
  "projectName": "Plano de Evolução da Matriz de Eisenhower",
  "version": "1.9.2",
  "lastUpdated": "2025-10-18T15:58:00Z",
  "projectMethodology": {
    "title": "Metodologia de Desenvolvimento Colaborativo e Incremental",
    "description": "Este projeto segue um processo de desenvolvimento iterativo e rigoroso, onde cada nova funcionalidade ou correção é tratada como um mini-projeto. O objetivo é garantir a máxima qualidade, controle e alinhamento a cada passo, priorizando a estabilidade do código existente sobre a implementação de novas features.",
    "corePrinciples": [
      {
        "principle": "Planejamento Detalhado e Colaborativo",
        "details": "Nenhuma implementação começa sem um plano detalhado. Eu proponho um plano dividido em passos lógicos, e você, o usuário, atua como arquiteto de software, revisando, questionando e aprovando as decisões de arquitetura (ex: a criação de novos serviços como 'data-service' e 'archive-service')."
      },
      {
        "principle": "Documentação 'As Code'",
        "details": "O Roadmap é a fonte da verdade. Antes de iniciar a codificação de uma nova feature, o plano detalhado é primeiro transcrito para este arquivo. A documentação não é um registro do que foi feito, mas um guia para o que será feito."
      },
      {
        "principle": "Desenvolvimento Orientado por Confirmação (Approval-Driven Development)",
        "details": "O desenvolvimento avança em um ritmo controlado por você. Eu forneço o código para um único passo do plano e aguardo sua confirmação explícita ('ok', 'prossiga', etc.) antes de avançar para o próximo. Isso garante revisão e controle contínuos."
      },
      {
        "principle": "Commits Atômicos",
        "details": "Cada passo do nosso plano corresponde a um único 'commit' no Git. Isso cria um histórico de alterações limpo, onde cada commit tem uma única e clara responsabilidade, facilitando a depuração e o rastreamento de mudanças."
      },
      {
        "principle": "Estabilidade Primeiro (Regression Handling)",
        "details": "Se uma funcionalidade existente quebrar (regressão), o desenvolvimento da nova feature é imediatamente pausado. Um novo plano de correção é criado e executado. Apenas após a confirmação da correção, o trabalho na nova funcionalidade é retomado."
      }
    ]
  },
  "projectGoals": [
    "Aumentar a manutenibilidade e escalabilidade do código-fonte.",
    "Melhorar a produtividade do usuário através de novas funcionalidades e refinamentos de UX.",
    "Estabelecer uma arquitetura de software robusta para futuras expansões."
  ],
  "phases": [
    {
      "phaseId": "3.2",
      "phaseName": "Refatoração da Arquitetura para Múltiplas Visões",
      "status": "Concluído"
    },
    {
      "phaseId": 4,
      "phaseName": "Gestão de Projetos de Longo Prazo",
      "status": "Em Progresso",
      "objective": "Permitir a organização de tarefas em objetivos maiores, separando o planejamento da execução.",
      "epics": [
        {
          "epicName": "Arquitetura de Dados para Projetos",
          "status": "Concluído",
          "tasks": [
            { "task": "[FEATURE] Criar 'project-service.js' para gerenciar o CRUD de projetos.", "status": "Concluído" },
            { "task": "[REFACTOR] Adicionar um 'projectId' opcional à estrutura de dados das tarefas.", "status": "Concluído" },
            { "task": "[REFACTOR] Aprimorar o 'data-service.js' para incluir projetos no backup unificado.", "status": "Concluído" }
          ]
        },
        {
          "epicName": "Módulo de Projetos (UI)",
          "status": "Concluído",
          "tasks": [
            { "task": "[UI] Implementar um navegador principal (abas) no cabeçalho para alternar entre as views Matriz e Projetos.", "status": "Concluído" },
            { "task": "[UI] Construir a view principal de projetos ('projects-view.js') para listar todos os projetos.", "status": "Concluído" },
            { "task": "[UI] Implementar a visualização interna de um projeto, mostrando suas tarefas e uma barra de progresso.", "status": "Concluído" },
            { "task": "[UI] Implementar a criação de novos projetos através de um modal.", "status": "Concluído" },
            { "task": "[UI] Refinar e uniformizar os botões da visão de detalhes e aplicar polimento visual.", "status": "Concluído" }
          ]
        },
        {
          "epicName": "Integração Matriz <-> Projetos",
          "status": "Concluído",
          "tasks": [
            { "task": "[FEATURE] Implementar a criação de tarefas dentro da view de um projeto.", "status": "Concluído" },
            { "task": "[UI] Refatorar a lista de tarefas do projeto para cards interativos (edição, data, exclusão).", "status": "Concluído" },
            { "task": "[FEATURE] Implementar a função 'Promover para a Matriz' baseada nos critérios de Urgente/Importante.", "status": "Concluído" },
            { "task": "[UI] Exibir uma tag (ou badge) visual nos cards da matriz indicando o projeto de origem.", "status": "Concluído" },
            { "task": "[FEATURE] Garantir que a conclusão/arquivamento de uma tarefa na matriz atualize seu status na visão do projeto.", "status": "Concluído" },
            { "task": "[FEATURE] Garantir que uma tarefa na matriz seja também visualizada com seu status (por fazer, quadrante, concluida ou arquivada) na visão do projeto.", "status": "Concluído" }
          ]
        },
        {
          "epicName": "Ciclo de Vida do Projeto",
          "status": "Concluído",
          "tasks": [
            { "task": "[FEATURE] Implementar a edição de projetos (nome e descrição).", "status": "Concluído" },
            { "task": "[FEATURE] Implementar a exclusão de projetos.", "status": "Concluído" },
            { "task": "[FEATURE] Criar 'project-archive-service.js' para gerenciar projetos arquivados.", "status": "Concluído" },
            { "task": "[REFACTOR] Adicionar 'status' e 'completedAt' ao modelo de dados do projeto.", "status": "Concluído" },
            { "task": "[FEATURE] Implementar handlers no controller para concluir, arquivar, restaurar e excluir projetos.", "status": "Concluído" },
            { "task": "[UI] Construir o modal e a lista de visualização para projetos arquivados.", "status": "Concluído" },
            { "task": "[UI] Adicionar botões de 'Concluir' e 'Arquivar' na interface do projeto.", "status": "Concluído" }
          ]
        },
        {
          "epicName": "Filtros Avançados",
          "status": "Pendente",
          "tasks": [
            { "task": "[FEATURE] Implementar um controle na 'matrix-view' para filtrar as tarefas por um ou mais projetos.", "status": "Pendente" }
          ]
        }
      ]
    },
    {
      "phaseId": 5,
      "phaseName": "Produtividade Proativa (O Assistente Inteligente)",
      "status": "Pendente",
      "objective": "Transformar a aplicação em um assistente ativo que ajuda o usuário a manter o foco, o momento e a clareza sobre suas tarefas e projetos.",
      "epics": [
        {
          "epicName": "Fundação de Dados de Inatividade",
          "status": "Pendente",
          "tasks": [
            { "task": "[REFACTOR] Adicionar um timestamp 'lastModifiedAt' aos modelos de dados de tarefas e projetos.", "status": "Pendente" }
          ]
        },
        {
          "epicName": "MVP - Nudges Passivos",
          "status": "Pendente",
          "tasks": [
            { "task": "[UI] Implementar 'Indicadores Visuais de Frescor' nos cards com base na inatividade.", "status": "Pendente" }
          ]
        },
        {
          "epicName": "Feature Principal - O Ritual Estruturado",
          "status": "Pendente",
          "tasks": [
            { "task": "[FEATURE] Criar um 'assistant-service.js' para conter a lógica dos nudges.", "status": "Pendente" },
            { "task": "[UI] Construir o módulo de 'Revisão Semanal' para guiar o usuário.", "status": "Pendente" },
            { "task": "[FEATURE] Implementar ações sugeridas para itens estagnados.", "status": "Pendente" }
          ]
        },
        {
          "epicName": "Melhoria Analítica",
          "status": "Pendente",
          "tasks": [
            { "task": "[FEATURE] Aprimorar 'data-service.js' com uma função de 'Análise de Momentum'.", "status": "Pendente" },
            { "task": "[UI] Adicionar a seção 'Itens Estagnados' na tela de Estatísticas.", "status": "Pendente" }
          ]
        }
      ]
    }
  ]
}