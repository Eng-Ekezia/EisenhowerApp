{
  "projectName": "Plano de Evolução da Matriz de Eisenhower",
  "version": "1.6.0",
  "lastUpdated": "2025-09-29T12:00:00Z",
  "projectMethodology": {
    "title": "Metodologia de Desenvolvimento Colaborativo e Incremental",
    "description": "Este projeto segue um processo de desenvolvimento iterativo e rigoroso, onde cada nova funcionalidade ou correção é tratada como um mini-projeto. O objetivo é garantir a máxima qualidade, controle e alinhamento a cada passo, priorizando a estabilidade do código existente sobre a implementação de novas features.",
    "corePrinciples": [
      {
        "principle": "Planejamento Detalhado e Colaborativo",
        "details": "Nenhuma implementação começa sem um plano detalhado. Eu proponho um plano dividido em passos lógicos, e você, o usuário, atua como arquiteto de software, revisando, questionando e aprovando as decisões de arquitetura (ex: a criação de novos serviços como 'data-service' e 'archive-service')."
      },
      {
        "principle": "Documentação 'As Code'",
        "details": "O Roadmap é a fonte da verdade. Antes de iniciar a codificação de uma nova feature, o plano detalhado é primeiro transcrito para este arquivo. A documentação não é um registro do que foi feito, mas um guia para o que será feito."
      },
      {
        "principle": "Desenvolvimento Orientado por Confirmação (Approval-Driven Development)",
        "details": "O desenvolvimento avança em um ritmo controlado por você. Eu forneço o código para um único passo do plano e aguardo sua confirmação explícita ('ok', 'prossiga', etc.) antes de avançar para o próximo. Isso garante revisão e controle contínuos."
      },
      {
        "principle": "Commits Atômicos",
        "details": "Cada passo do nosso plano corresponde a um único 'commit' no Git. Isso cria um histórico de alterações limpo, onde cada commit tem uma única e clara responsabilidade, facilitando a depuração e o rastreamento de mudanças."
      },
      {
        "principle": "Estabilidade Primeiro (Regression Handling)",
        "details": "Se uma funcionalidade existente quebrar (regressão), o desenvolvimento da nova feature é imediatamente pausado. Um novo plano de correção é criado e executado. Apenas após a confirmação da correção, o trabalho na nova funcionalidade é retomado."
      }
    ]
  },
  "projectGoals": [
    "Aumentar a manutenibilidade e escalabilidade do código-fonte.",
    "Melhorar a produtividade do usuário através de novas funcionalidades e refinamentos de UX.",
    "Estabelecer uma arquitetura de software robusta para futuras expansões."
  ],
  "phases": [
    {
      "phaseId": "2.5",
      "phaseName": "Refinamento e Correção de Bugs",
      "status": "Concluído"
    },
    {
      "phaseId": 3,
      "phaseName": "Visão de Futuro (Funcionalidades Avançadas)",
      "status": "Concluído"
    },
    {
      "phaseId": "3.1",
      "phaseName": "Refinamento e Correção Pós-Fase 3",
      "status": "Concluído"
    },
    {
      "phaseId": "3.2",
      "phaseName": "Refatoração da Arquitetura para Múltiplas Visões",
      "status": "Concluído",
      "objective": "Modernizar a arquitetura do front-end para suportar múltiplas visões (Matriz, Projetos, etc.) de forma escalável, setorizando o estado, a lógica de controle e a renderização da UI.",
      "epics": [
        {
          "epicName": "Implementação do Padrão State-Controller-View",
          "status": "Concluído",
          "tasks": [
            { "task": "[REFACTOR] Criar um módulo 'state.js' para centralizar o estado da aplicação.", "status": "Concluído" },
            { "task": "[REFACTOR] Criar um módulo 'controller.js' para isolar os manipuladores de eventos e a lógica de negócio.", "status": "Concluído" },
            { "task": "[REFACTOR] Setorizar a UI, renomeando ui-manager.js para matrix-view.js.", "status": "Concluído" },
            { "task": "[REFACTOR] Simplificar o app.js para atuar apenas como ponto de entrada.", "status": "Concluído" }
          ]
        },
        {
          "epicName": "Depuração Pós-Refatoração",
          "status": "Concluído",
          "tasks": [
            { "task": "[FIX] Arrastar e soltar tarefas entre quadrantes está inoperante", "status": "Concluído" },
            { "task": "[FIX] Botão alternar vizualização de 2x2 para 1x4 no sidesheet está inoperante", "status": "Concluído" },
            { "task": "[FIX] Quando um quadrante está vazio e adicionamos a 1ª tarefa, o card aparece centralizado com o tamanho reduzido. Após o 1º, as demais adições ocorrem normalmente, com o card ocupando a largura do quadrante.", "status": "Concluído" },
            { "task": "[FIX] Ao adicionar uma nova tarefa, o campo de data não está seguindo o padrão visual dos demais campos e está destoando a UI", "status": "Concluído" }
          ]
        }
      ]
    },
    {
      "phaseId": 4,
      "phaseName": "Gestão de Projetos de Longo Prazo",
      "status": "Em Progresso"
    },
    {
      "phaseId": 5,
      "phaseName": "Produtividade Proativa (O Assistente Inteligente)",
      "status": "Pendente"
    }
  ]
}